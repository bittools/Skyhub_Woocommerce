<?php
/**
 * BSeller - B2W Companhia Digital
 *
 * DISCLAIMER
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @copyright     Copyright (c) 2017 B2W Companhia Digital. (http://www.bseller.com.br/)
 * @author        Luiz Tucillo <luiz.tucillo@e-smart.com.br>
 */

namespace B2W\SkyHub\Model\Repository;

use B2W\SkyHub\Contract\Entity\CategoryEntityInterface;
use B2W\SkyHub\Contract\Repository\CategoryRepositoryInterface;
use B2W\SkyHub\Model\Resource\Collection;
use B2W\SkyHub\Model\Entity\CategoryEntity;
use B2W\SkyHub\Model\Resource\Select;

/**
 * Class CategoryDbRepository
 * @package B2W\SkyHub\Model\Repository
 */
class CategoryDbRepository implements CategoryRepositoryInterface
{
    /**
     * @param $id
     * @return CategoryEntityInterface|mixed
     */
    public function one($id)
    {
        global $wpdb;

        $select     = $this->_getSelect();
        $select->where('term_taxonomy_id = %s');

        $query      = $wpdb->prepare($select->prepare(), $id);
        $results    = $wpdb->get_results($query);

        foreach ($results as $result) {
            $category = new CategoryEntity();
            $category->setId($result->term_taxonomy_id)
                ->setCode($result->slug)
                ->setName($result->name);

            if ($result->parent) {
                $category->setParent(self::one($result->parent));
            }

            return $category;
        }

        return new CategoryEntity();
    }

    /**
     * @param \B2W\SkyHub\Contract\Entity\ProductEntityInterface $product
     * @return Collection|mixed
     */
    public function load(\B2W\SkyHub\Contract\Entity\ProductEntityInterface $product)
    {
        global $wpdb;

        $select = $this->_getSelect();
        $select->join(
            'term_relationships',
            "relations.term_taxonomy_id = main_table.term_taxonomy_id
                AND relations.object_id = {$product->getId()}",
            'relations'
        );
        $select->group('main_table.term_taxonomy_id');

        $results = $wpdb->get_results($select->prepare());

        $collection = new Collection();

        foreach ($results as $result) {
            $category = new CategoryEntity();
            $category->setId($result->term_taxonomy_id)
                ->setCode($result->slug)
                ->setName($result->name);

            if ($result->parent) {
                $category->setParent($this->one($result->parent));
            }

            $collection->addItem($category);
        }

        return $collection;
    }

    /**
     * @return Select|string
     */
    protected function _getSelect()
    {
        $select = new Select();

        $select->column('main_table.term_taxonomy_id')
            ->column('terms.name')
            ->column('terms.slug')
            ->column('main_table.parent');

        $select->from('term_taxonomy', 'main_table');

        $select->join('terms', 'terms.term_id = main_table.term_id', 'terms');

        $select->where("taxonomy = 'product_cat'");

        return $select;
    }
}
