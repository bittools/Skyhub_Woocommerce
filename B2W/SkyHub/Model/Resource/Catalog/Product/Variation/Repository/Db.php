<?php
/**
 * BSeller - B2W Companhia Digital
 *
 * DISCLAIMER
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @copyright     Copyright (c) 2017 B2W Companhia Digital. (http://www.bseller.com.br/)
 * @author        Luiz Tucillo <luiz.tucillo@e-smart.com.br>
 */

namespace B2W\SkyHub\Model\Resource\Catalog\Product\Variation\Repository;

use B2W\SkyHub\Model\Catalog\Product\Variation\Entity;
use B2W\SkyHub\Model\Resource\Catalog\Product\Variation\Collection;
use B2W\SkyHub\Model\Resource\RepositoryAbstract;
use B2W\SkyHub\Model\Resource\Select;

/**
 * Class Db
 * @package B2W\SkyHub\Model\Order\Repository
 */
class Db extends RepositoryAbstract implements \B2W\SkyHub\Contracts\Resource\Catalog\Product\Variation\Repository
{
    /**
     * @param \B2W\SkyHub\Contracts\Catalog\Product\Entity|\WP_Post $product
     * @return \B2W\SkyHub\Contracts\Resource\Collection|Collection
     * @throws \Exception
     */
    public function load($product)
    {
        $filter = array(
            'post_status'   => array('publish'),
            'post_type'     => Entity::POST_TYPE,
            'post_parent'   => $product instanceof \B2W\SkyHub\Contracts\Catalog\Product\Entity
                ? $product->getId()
                : $product->ID
        );

        $posts      = get_posts($filter);
        $collection = new Collection();

        foreach ($posts as $post) {
            $variation = $this->one($post);
            $collection->addItem($variation);
        }

        return $collection;
    }

    /**
     * @param $id
     * @return mixed|null
     * @throws \Exception
     */
    public function one($id)
    {
        if ($id instanceof \WP_Post) {
            $post = $id;
        } else {
            $post = get_post($id);
        }

        /** @var \B2W\SkyHub\Model\Transformer\Catalog\Product\Variation\PostToEntity $transformer */
        $transformer = \App::transformer('catalog/product/variation/post_to_entity');
        $transformer->setPost($post);
        $transformer->setMeta(get_post_meta($post->ID));
        return $transformer->convert();
    }

    /**
     * @param $sku
     * @return bool|mixed|null
     * @throws \Exception
     */
    public function sku($sku)
    {
        global $wpdb;

        $sku = sanitize_text_field($sku);

        $select = new Select();
        $select->column('post_id');
        $select->from('postmeta');
        $select->where("meta_key = '_sku'");
        $select->where("meta_value= '$sku'");

        foreach ($wpdb->get_results($select) as $row) {
            return $this->one($row->post_id);
        }

        return false;
    }
}
