<?php
/**
 * BSeller - B2W Companhia Digital
 *
 * DISCLAIMER
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @copyright     Copyright (c) 2017 B2W Companhia Digital. (http://www.bseller.com.br/)
 * @author        Luiz Tucillo <luiz.tucillo@e-smart.com.br>
 */

namespace B2W\SkyHub\Model\Catalog\Product\Variation;


/**
 * Class Entity
 * @package B2W\SkyHub\Model\Catalog\Product\Variation
 */
class Entity implements \B2W\SkyHub\Contracts\Catalog\Product\Variation\Entity
{
    /**
     *
     */
    const POST_TYPE = 'product_variation';

    /**
     * @var null
     */
    protected $_id              = null;
    /**
     * @var null
     */
    protected $_sku             = null;
    /**
     * @var null
     */
    protected $_qty             = null;
    /**
     * @var null
     */
    protected $_ean             = null;
    /**
     * @var array
     */
    protected $_images          = null;
    /**
     * @var null
     */
    protected $_specifications  = null;
    /**
     * @var null
     */
    protected $_parent          = null;

    /**
     * @param \B2W\SkyHub\Contracts\Catalog\Product\Entity $product
     * @return $this|mixed
     */
    public function setParent(\B2W\SkyHub\Contracts\Catalog\Product\Entity $product)
    {
        $this->_parent = $product;
        return $this;
    }

    /**
     * @return mixed|null
     */
    public function getParent()
    {
        return $this->_parent;
    }


    /**
     * @return null
     */
    public function getId()
    {
        return $this->_id;
    }

    /**
     * @param null $id
     * @return Entity
     */
    public function setId($id)
    {
        $this->_id = $id;
        return $this;
    }

    /**
     * @return null
     */
    public function getSku()
    {
        return $this->_sku;
    }

    /**
     * @param null $sku
     * @return Entity
     */
    public function setSku($sku)
    {
        $this->_sku = $sku;
        return $this;
    }

    /**
     * @return null
     */
    public function getQty()
    {
        return $this->_qty;
    }

    /**
     * @param null $qty
     * @return Entity
     */
    public function setQty($qty)
    {
        $this->_qty = $qty;
        return $this;
    }

    /**
     * @return null
     */
    public function getEan()
    {
        return $this->_ean;
    }

    /**
     * @param null $ean
     * @return Entity
     */
    public function setEan($ean)
    {
        $this->_ean = $ean;
        return $this;
    }

    /**
     * @return array
     */
    public function getImages()
    {
        if (is_null($this->_images)) {
            $this->_images = array();
        }

        return $this->_images;
    }

    /**
     * @param $image
     * @return $this|mixed
     */
    public function addImage($image)
    {
        $this->_images[] = $image;
        return $this;
    }

    /**
     * @return mixed|null
     * @throws \Exception
     */
    public function getSpecifications()
    {
        if (is_null($this->_specifications)) {
            $this->_loadSpecifications();
        }

        return $this->_specifications;
    }

    /**
     * @return $this|mixed
     * @throws \Exception
     */
    protected function _loadSpecifications()
    {
        if (is_null($this->_specifications) && $this->getParent()) {

            $this->_specifications = new \B2W\SkyHub\Model\Catalog\Product\Specification\Collection();

            foreach ($this->getParent()->getVariationAttributes() as $attribute) {
                $meta = get_post_meta($this->getId());

                if (isset($meta['attribute_pa_' . $attribute->getCode()])) {

                    $option = $this->_getOption(
                        current($meta['attribute_pa_' . $attribute->getCode()]),
                        $attribute
                    );

                    if (!$option) {
                        throw new \Exception('Option error');
                    }

                    $spec = new \B2W\SkyHub\Model\Catalog\Product\Specification\Entity();
                    $spec->setAttribute($attribute)
                        ->setOption($option);

                    $this->_specifications->addItem($spec);
                }
            }
        }

        return $this;
    }

    /**
     * @param $value
     * @param $attribute
     * @return bool
     */
    protected function _getOption($value, $attribute)
    {
        foreach ($attribute->getOptions() as $option) {
            if ($option->getCode() == $value) {
                return $option;
            }
        }

        return false;
    }
}
