<?php
/**
 * BSeller - B2W Companhia Digital
 *
 * DISCLAIMER
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @copyright     Copyright (c) 2017 B2W Companhia Digital. (http://www.bseller.com.br/)
 * @author        Luiz Tucillo <luiz.tucillo@e-smart.com.br>
 */

namespace B2W\SkyHub\Model\Sales\Order\Item\Repository;

use B2W\SkyHub\Contracts\Resource\Sales\Order\Repository;
use B2W\SkyHub\Model\Resource\RepositoryAbstract;
use B2W\SkyHub\Model\Resource\Select;

/**
 * Class Db
 * @package B2W\SkyHub\Model\Sales\Order\Item\Repository
 */
class Db extends RepositoryAbstract implements Repository
{
    /**
     * @param \B2W\SkyHub\Contracts\Sales\Order\Entity $order
     * @return \B2W\SkyHub\Contracts\Resource\Collection|\B2W\SkyHub\Model\Sales\Order\Item\Collection|mixed
     */
    public function get(\B2W\SkyHub\Contracts\Sales\Order\Entity $order)
    {
        global $wpdb;

        $select = new Select();
        $select->addColumn('*');
        $select->from('woocommerce_order_items', 'main_table');
        $select->join(
            'woocommerce_order_itemmeta',
            "main_table.order_item_id = itemmeta.order_item_id",
            'itemmeta'
        );
        $select->where('main_table.order_id = ' . $order->getId());

        $items = array();

        foreach ($wpdb->get_results($select) as $item) {

            if ($item->order_item_type != 'line_item') {
                continue;
            }

            $items[$item->order_item_id]['order_item_id']   = $item->order_item_id;
            $items[$item->order_item_id]['order_item_name'] = $item->order_item_name;
            $items[$item->order_item_id][$item->meta_key]   = $item->meta_value;
        }

        $collection = $this->emptyCollection();

        foreach ($items as $item) {
            $obj    = $this->emptyOne();
            $obj->setId($item['order_item_id']);
            $obj->setName($item['order_item_name']);
            $obj->setQty($item['_qty']);
            $obj->setOriginalPrice($item['_line_subtotal'] / $obj->getQty());
            $obj->setProductId($item['_product_id']);
            $obj->setShippingCost(null);
            $obj->setSpecialPrice($item['_line_total'] / $obj->getQty());

            $collection->addItem($obj);
        }

        return $collection;
    }

    /**
     * @return \B2W\SkyHub\Model\Sales\Order\Item\Entity|mixed
     */
    public function emptyOne()
    {
        return new \B2W\SkyHub\Model\Sales\Order\Item\Entity();
    }

    /**
     * @return \B2W\SkyHub\Contracts\Resource\Collection|\B2W\SkyHub\Model\Sales\Order\Item\Collection
     */
    public function emptyCollection()
    {
        return new \B2W\SkyHub\Model\Sales\Order\Item\Collection();
    }
}
