<?php
/**
 * BSeller - B2W Companhia Digital
 *
 * DISCLAIMER
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @copyright     Copyright (c) 2017 B2W Companhia Digital. (http://www.bseller.com.br/)
 * @author        Luiz Tucillo <luiz.tucillo@e-smart.com.br>
 */

namespace B2W\SkyHub\Model\Map;


use B2W\SkyHub\Model\Map\AttributeCollection;

/**
 * Class MapAbstract
 * @package B2W\SkyHub\Model
 */
abstract class MapAbstract
{
    /**
     * @var null
     */
    protected $_map     = null;

    /**
     * @return string
     */
    abstract protected function _getConfigPath();

    /**
     * @return string
     */
    abstract protected function _getOptionsName();

    /**
     * @return array
     */
    public function map()
    {
        if (is_null($this->_map)) {
            $options = $this->_getOptions();

            if (!$options) {
                $options = $this->_createDefaultAttributeMap();
                $this->_addOption($options);
            }

            $this->_map = $options;
        }

        return $this->_map;
    }

    /**
     * @return mixed|null
     */
    protected function _getOptions()
    {
        if (!$this->_getOptionsName()) {
            return null;
        }

        return unserialize(get_option($this->_getOptionsName(), null));
    }

    /**
     * @param $options
     * @return bool|null
     */
    protected function _addOption($options)
    {
        if (!$this->_getOptionsName()) {
            return null;
        }

        return add_option($this->_getOptionsName(), serialize($options));
    }

    /**
     * @param $attr
     * @param $related
     * @return bool
     */
    public function setRelated($attr, $related)
    {
        $map    = $this->map();
        /** @var Attribute $item */
        $item   = $map->getItemByKey('_skyhub', $attr);

        if (!$item) {
            return false;
        }

        $item->setWordpress($related);

        return true;
    }

    /**
     * @return $this
     */
    public function save()
    {
        $map = $this->map();

        if ($this->_getOptionsName()) {
            update_option($this->_getOptionsName(), serialize($map));
        }

        return $this;
    }

    /**
     * @return AttributeCollection
     */
    private function _createDefaultAttributeMap()
    {
        $config     = \App::config($this->_getConfigPath());
        $collection = new AttributeCollection();

        foreach ($config as $attribute) {

            $map = new Attribute();

            $map->setSkyhub(isset($attribute['skyhub']) ? $attribute['skyhub'] : null);
            $map->setWordpress(isset($attribute['wordpress']) ? $attribute['wordpress'] : null);
            $map->setMapper(isset($attribute['mapper']) ? $attribute['mapper'] : null);
            $map->setLabel(isset($attribute['label']) ? $attribute['label'] : '');

            if (isset($attribute['show_in_admin'])) {
                $map->setShowInAdmin($attribute['show_in_admin']);
            }

            $collection->addItem($map);
        }

        return $collection;
    }

    /**
     * @param $value
     * @return string
     */
    protected function _prepareString($value)
    {
        if (is_array($value)) {
            return implode(' + ', $value);
        }

        return $value;
    }
}
