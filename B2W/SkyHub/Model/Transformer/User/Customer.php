<?php
/**
 * BSeller - B2W Companhia Digital
 *
 * DISCLAIMER
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @copyright     Copyright (c) 2017 B2W Companhia Digital. (http://www.bseller.com.br/)
 * @author        Luiz Tucillo <luiz.tucillo@e-smart.com.br>
 */

namespace B2W\SkyHub\Model\Transformer\User;


use B2W\SkyHub\Contracts\Sales\Order\Customer\Entity;
use B2W\SkyHub\Model\Resource\Select;
use B2W\SkyHub\Model\Transformer\ToCustomerAbstract;

/**
 * Class Customer
 * @package B2W\SkyHub\Model\Transformer\User
 */
class Customer extends ToCustomerAbstract
{
    /**
     * @var string
     */
    protected $_entity      = 'customer';
    /**
     * @var null
     */
    protected $_userMeta    = array();
    /**
     * @var array
     */
    protected $_userData    = array();

    /**
     * @var null
     */
    protected $_customer    = null;

    /**
     * @param Entity $customer
     * @return Customer
     * @throws \B2W\SkyHub\Exception\Helper\HelperNotFound
     */
    public static function convert(Entity $customer)
    {
        /** @var self $instance */
        $instance = static::_instantiate();
        $instance->setCustomer($customer);
        $instance->_convert();
        return $instance;
    }

    /**
     * @param $localAttr
     * @return mixed|null|string
     */
    protected function _getEntityData($localAttr)
    {
        $id = $this->getCustomer()->getId();

        if (!isset($this->_userData[$id])) {
            global $wpdb;

            $this->_userData[$id] = array();

            $select = new Select();
            $select->addColumn('*');
            $select->from('users', 'main_table');
            $select->where("main_table.ID = $id");

            foreach ($wpdb->get_results($select) as $item) {
                $props = (array) $item;

                foreach ($props as $attr => $value) {
                    $this->_userData[$id][$attr] = $value;
                }
            }
        }

        if (!isset($this->_userData[$id][$localAttr]) || empty($this->_userData[$id][$localAttr])) {
            return $this->_getEntityMeta($localAttr);
        }

        return $this->_userData[$id][$localAttr];
    }


    /**
     * @param $localAttr
     * @return array|null|string
     */
    protected function _getEntityMeta($localAttr)
    {
        $id = $this->getCustomer()->getId();

        if (is_null($this->_userMeta) || !isset($this->_userMeta[$id])) {
            global $wpdb;

            $this->_userMeta = array();

            $select = new Select();
            $select->addColumn('*');
            $select->from('usermeta', 'main_table');
            $select->where("main_table.user_id = $id");

            foreach ($wpdb->get_results($select) as $meta) {
                $this->_userMeta[$id][$meta->meta_key] = $meta->meta_value;
            };
        }

        return isset($this->_userMeta[$id]) && isset($this->_userMeta[$id][$localAttr])
            ? $this->_userMeta[$id][$localAttr]
            : null;
    }
}
