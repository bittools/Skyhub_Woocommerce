<?php
/**
 * BSeller - B2W Companhia Digital
 *
 * DISCLAIMER
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @copyright     Copyright (c) 2017 B2W Companhia Digital. (http://www.bseller.com.br/)
 * @author        Luiz Tucillo <luiz.tucillo@e-smart.com.br>
 */

namespace B2W\SkyHub\Model\Transformer\Sales\Order;


use B2W\SkyHub\Contracts\Sales\Order\Entity as orderEntity;
use B2W\SkyHub\Contracts\Sales\Order\Address\Entity as addressEntity;
use B2W\SkyHub\Helper\App;
use B2W\SkyHub\Model\TransformerAbstract;

/**
 * Class Address
 * @package B2W\SkyHub\Model\Transformer\Sales\Order
 */
class Address extends TransformerAbstract
{
    const PLACEHOLDER = '{{ADDR_TYPE}}';

    /** @var addressEntity */
    protected $_address = null;
    /** @var orderEntity */
    protected $_order   = null;
    /** @var string */
    protected $_type    = null;


    /**
     * @param orderEntity $order
     * @param addressEntity $address
     * @param $type
     * @return Address
     * @throws \B2W\SkyHub\Exception\Helper\HelperNotFound
     */
    final public static function convert(orderEntity $order, addressEntity $address, $type)
    {
        /** @var self $instance */
        $instance = static::_instantiate();

        $instance->_address = $address;
        $instance->_order   = $order;
        $instance->_type    = $type;

        $instance->_convert();
        $instance->_reset();

        return $instance;
    }

    /**
     * @return $this
     */
    protected function _reset()
    {
        $this->_address = null;
        $this->_order   = null;
        $this->_type    = null;

        return $this;
    }

    /**
     * @return $this
     * @throws \B2W\SkyHub\Exception\Helper\HelperNotFound
     */
    protected function _convert()
    {
        $data = get_post_meta($this->_order->getId());

        foreach (\App::config('map/sales/order/address') as $attr) {

            if (empty($attr['default_local'])) {
                continue;
            }

            $key = str_replace(self::PLACEHOLDER, '_' . $this->_type, $attr['default_local']);

            if (!isset($data[$key])) {
                continue;
            }

            $this->_setAttribute($attr['code'], current($data[$key]));
        }

        return $this;
    }

    /**
     * @param $attr
     * @param $value
     * @return bool
     * @throws \B2W\SkyHub\Exception\Helper\HelperNotFound
     */
    protected function _setAttribute($attr, $value)
    {
        /** @var App $helper */
        $helper = \App::helper('app');
        $method = $helper->getSetterMethodName($this->_address, $attr);

        if ($method) {
            return $this->_address->$method($value);
        }

        return false;
    }
}
