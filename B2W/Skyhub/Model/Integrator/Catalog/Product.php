<?php
/**
 * BSeller - B2W Companhia Digital
 *
 * DISCLAIMER
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @copyright     Copyright (c) 2017 B2W Companhia Digital. (http://www.bseller.com.br/)
 * @author        Luiz Tucillo <luiz.tucillo@e-smart.com.br>
 */

namespace B2W\Skyhub\Model\Integrator\Catalog;

use B2W\Skyhub\Model\Catalog\Product\Entity;

class Product
{
    public function one(Entity $product)
    {
        $email          = 'testemodulo@skyhub.com.br';
        $apiKey         = 'k28PJT7_upjVJbjuPBpD';
        $api            = new \SkyHub\Api($email, $apiKey);
        $requestHandler = $api->product();

        $response       = $requestHandler->create(
            $product->getSku(),
            $this->_prepareAttributes($product),
            $product->getImages(),
            $this->_prepareCategories($product),
            $this->_prepareSpecifications($product),
            $this->_prepareVariations($product),
            $this->_prepareVariationAttributes($product)
        );

        return $this;
    }

    protected function _prepareAttributes(Entity $product)
    {
        return array(
            'sku'               => $product->getSku(),
            'name'              => $product->getName(),
            'description'       => $product->getDescription(),
            'status'            => $product->getStatus(),
            'qty'               => $product->getQty(),
            'price'             => $product->getPrice(),
            'promotional_price' => $product->getPrice(),
            'cost'              => null,
            'weight'            => $product->getWeight(),
            'height'            => $product->getHeight(),
            'width'             => $product->getWidth(),
            'length'            => $product->getLength(),
            'brand'             => $product->getBrand(),
            'ean'               => $product->getEan(),
            'nbm'               => $product->getNbm()
        );
    }

    protected function _prepareCategories(Entity $product)
    {
        $categories = array();

        /** @var \B2W\Skyhub\Model\Catalog\Category\Entity $category */
        foreach ($product->getCategories() as $category) {
            $categories[] = array(
                'code'  => $category->getCode(),
                'name'  => $category->getName()
            );
        }

        return $categories;
    }

    protected function _prepareSpecifications(Entity $product)
    {
        $specifications = array();
        /** @var \B2W\Skyhub\Model\Catalog\Product\Specification\Entity $specification */
        foreach ($product->getSpecifications() as $specification) {
            $specifications[] = array(
                'key'   => $specification->getAttribute()->getCode(),
                'value' => $specification->getOption()->getLabel()
            );
        }

        return $specifications;
    }

    protected function _prepareVariations(Entity $product)
    {
        $variations = array();

        /** @var \B2W\Skyhub\Model\Catalog\Product\Variation\Entity $variation */
        foreach ($product->getVariations() as $variation) {

            $specs = array();

            /** @var \B2W\Skyhub\Model\Catalog\Product\Specification\Entity $spec */
            foreach ($variation->getSpecifications() as $spec) {
                $specs[] = array(
                    'key'   => $spec->getAttribute()->getCode(),
                    'value' => $spec->getOption()->getLabel()
                );
            }

            $variations[] = array(
                'sku'               => $variation->getSku(),
                'qty'               => $variation->getQty(),
                'ean'               => $variation->getEan(),
                'images'            => $variation->getImages(),
                'specifications'    => $specs
            );
        }

        return $variations;
    }

    protected function _prepareVariationAttributes(Entity $product)
    {
        $vAttrs = array();

        /** @var \B2W\Skyhub\Model\Catalog\Product\Attribute\Entity $attribute */
        foreach ($product->getVariationAttributes() as $attribute) {
            $vAttrs[] = $attribute->getCode();
        }

        return $vAttrs;
    }
}
