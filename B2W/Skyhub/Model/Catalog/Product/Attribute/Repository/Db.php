<?php
/**
 * BSeller - B2W Companhia Digital
 *
 * DISCLAIMER
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @copyright     Copyright (c) 2017 B2W Companhia Digital. (http://www.bseller.com.br/)
 * @author        Luiz Tucillo <luiz.tucillo@e-smart.com.br>
 */

namespace B2W\Skyhub\Model\Catalog\Product\Attribute\Repository;

use B2W\Skyhub\Model\Catalog\Product\Attribute\Entity;
use B2W\Skyhub\Model\Catalog\Product\Attribute\Collection;

/**
 * Class Db
 * @package B2W\Skyhub\Model\Order\Repository
 */
class Db implements \B2W\Skyhub\Contracts\Data\Repository
{
    /**
     * @return \B2W\Skyhub\Contracts\Data\Collection|Collection
     */
    public static function all()
    {
        $results    = self::_prepareArrayAttributes(self::_getQuery());
        $collection = new Collection();

        foreach ($results as $result) {
            $attr = self::emptyOne();
            $attr->setId($result['id'])
                ->setCode($result['code'])
                ->setLabel($result['label']);

            if (isset($result['options'])) {
                foreach ($result['options'] as $opt) {
                    $option = new \B2W\Skyhub\Model\Catalog\Product\Attribute\Option\Entity();
                    $option->setId($opt['id'])
                        ->setCode($opt['code'])
                        ->setLabel($opt['label']);

                    $attr->addOption($option);
                }
            }

            $collection->addItem($attr);
        }

        return $collection;
    }

    /**
     * @param $id
     * @return Entity
     */
    public static function one($id)
    {
        global $wpdb;

        $query      = $wpdb->prepare(self::_getQuery() . " WHERE main_table.attribute_id = %s", $id);
        $results    = current(self::_prepareArrayAttributes($query));

        if (!$results) {
            return self::emptyOne();
        }

        $attr = self::emptyOne();
        $attr->setId($results['id'])
            ->setCode($results['code'])
            ->setLabel($results['label']);

        if (isset($results['options'])) {
            foreach ($results['options'] as $opt) {
                $option = new \B2W\Skyhub\Model\Catalog\Product\Attribute\Option\Entity();
                $option->setId($opt['id'])
                    ->setCode($opt['code'])
                    ->setLabel($opt['label']);

                $attr->addOption($option);
            }
        }

        return $attr;
    }

    public static function emptyOne()
    {
        return new Entity();
    }

    protected static function _prepareArrayAttributes($query)
    {
        global $wpdb;

        $results    = $wpdb->get_results($query);
        $attributes = array();

        foreach ($results as $result) {

            if (!isset($attributes[$result->attribute_id])) {
                $attributes[$result->attribute_id] = array(
                    'id'        => $result->attribute_id,
                    'code'      => $result->attribute_name,
                    'label'     => $result->attribute_label,
                    'options'   => array()
                );
            }

            if ($result->term_id) {
                $attributes[$result->attribute_id]['options'][$result->term_id] = array(
                    'id' => $result->term_id,
                    'code' => $result->name,
                    'label' => $result->name
                );
            }
        }

        return $attributes;
    }

    protected static function _getQuery()
    {
        global $wpdb;

        return <<<QUERY
SELECT attribute_id, attribute_name, attribute_label, terms.term_id, terms.name
FROM {$wpdb->prefix}woocommerce_attribute_taxonomies AS main_table
LEFT JOIN {$wpdb->prefix}term_taxonomy AS term_taxonomy
  ON term_taxonomy.taxonomy = CONCAT('pa_', main_table.attribute_name)
LEFT JOIN {$wpdb->prefix}terms AS terms
  ON terms.term_id = term_taxonomy.term_id
QUERY;
    }

    public static function emptyCollection()
    {
        return new Collection();
    }
}
