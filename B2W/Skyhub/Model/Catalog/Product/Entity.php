<?php
/**
 * BSeller - B2W Companhia Digital
 *
 * DISCLAIMER
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @copyright     Copyright (c) 2017 B2W Companhia Digital. (http://www.bseller.com.br/)
 * @author        Luiz Tucillo <luiz.tucillo@e-smart.com.br>
 */

namespace B2W\Skyhub\Model\Catalog\Product;

use B2W\Skyhub\Contracts\Catalog\Product\Collection;
use B2W\Skyhub\Model\Catalog\Product\Attribute\Factory as AttributeFactory;
use B2W\Skyhub\Model\Catalog\Product\Specification\Factory as SpecificationFactory;
use B2W\Skyhub\Model\Catalog\Product\Factory as ProductFactory;

/**
 * Class Entity
 * @package B2W\Skyhub\Model\Catalog\Product
 */
class Entity implements \B2W\Skyhub\Contracts\Catalog\Product\Entity
{
    const POST_TYPE = 'product';



    const POST_TYPE_VARIATION = 'product_variation';

    /**
     * @var
     */
    protected $_id;

    /**
     * @var
     */
    protected $_sku;

    /**
     * @var
     */
    protected $_name;

    /**
     * @var
     */
    protected $_description;

    /**
     * @var
     */
    protected $_status;

    /**
     * @var
     */
    protected $_qty;

    /**
     * @var
     */
    protected $_price;

    /**
     * @var
     */
    protected $_promotionalPrice;

    /**
     * @var
     */
    protected $_cost;

    /**
     * @var
     */
    protected $_weight;

    /**
     * @var
     */
    protected $_height;

    /**
     * @var
     */
    protected $_width;

    /**
     * @var
     */
    protected $_length;

    /**
     * @var
     */
    protected $_brand;

    /**
     * @var
     */
    protected $_ean;

    /**
     * @var
     */
    protected $_nbm;

    /**
     * @var
     */
    protected $_categories;

    /**
     * @var
     */
    protected $_images;
    /**
     * @var \B2W\Skyhub\Model\Catalog\Product\Attribute\Collection
     */
    protected $_specifications;
    /**
     * @var
     */
    protected $_variations;
    /**
     * @var \B2W\Skyhub\Model\Catalog\Product\Attribute\Collection
     */
    protected $_variationAttributes;

    /**
     * @return mixed
     */
    public function getId()
    {
        return $this->_id;
    }

    /**
     * @param mixed $id
     */
    public function setId($id)
    {
        $this->_id = $id;
    }

    /**
     * @return mixed
     */
    public function getSku()
    {
        return $this->_sku;
    }

    /**
     * @param mixed $sku
     */
    public function setSku($sku)
    {
        $this->_sku = $sku;
    }

    /**
     * @return mixed
     */
    public function getName()
    {
        return $this->_name;
    }

    /**
     * @param mixed $name
     */
    public function setName($name)
    {
        $this->_name = $name;
    }

    /**
     * @return mixed
     */
    public function getDescription()
    {
        return $this->_description;
    }

    /**
     * @param mixed $description
     */
    public function setDescription($description)
    {
        $this->_description = $description;
    }

    /**
     * @return mixed
     */
    public function getStatus()
    {
        return $this->_status;
    }

    /**
     * @param mixed $status
     */
    public function setStatus($status)
    {
        $this->_status = $status;
    }

    /**
     * @return mixed
     */
    public function getQty()
    {
        return $this->_qty;
    }

    /**
     * @param mixed $qty
     */
    public function setQty($qty)
    {
        $this->_qty = $qty;
    }

    /**
     * @return mixed
     */
    public function getPrice()
    {
        return $this->_price;
    }

    /**
     * @param mixed $price
     */
    public function setPrice($price)
    {
        $this->_price = $price;
    }

    /**
     * @return mixed
     */
    public function getPromotionalPrice()
    {
        return $this->_promotionalPrice;
    }

    /**
     * @param mixed $promotionalPrice
     */
    public function setPromotionalPrice($promotionalPrice)
    {
        $this->_promotionalPrice = $promotionalPrice;
    }

    /**
     * @return mixed
     */
    public function getCost()
    {
        return $this->_cost;
    }

    /**
     * @param mixed $cost
     */
    public function setCost($cost)
    {
        $this->_cost = $cost;
    }

    /**
     * @return mixed
     */
    public function getWeight()
    {
        return $this->_weight;
    }

    /**
     * @param mixed $weight
     */
    public function setWeight($weight)
    {
        $this->_weight = $weight;
    }

    /**
     * @return mixed
     */
    public function getHeight()
    {
        return $this->_height;
    }

    /**
     * @param mixed $height
     */
    public function setHeight($height)
    {
        $this->_height = $height;
    }

    /**
     * @return mixed
     */
    public function getWidth()
    {
        return $this->_width;
    }

    /**
     * @param mixed $width
     */
    public function setWidth($width)
    {
        $this->_width = $width;
    }

    /**
     * @return mixed
     */
    public function getLength()
    {
        return $this->_length;
    }

    /**
     * @param mixed $length
     */
    public function setLength($length)
    {
        $this->_length = $length;
    }

    /**
     * @return mixed
     */
    public function getBrand()
    {
        return $this->_brand;
    }

    /**
     * @param mixed $brand
     */
    public function setBrand($brand)
    {
        $this->_brand = $brand;
    }

    /**
     * @return mixed
     */
    public function getEan()
    {
        return $this->_ean;
    }

    /**
     * @param mixed $ean
     */
    public function setEan($ean)
    {
        $this->_ean = $ean;
    }

    /**
     * @return mixed
     */
    public function getNbm()
    {
        return $this->_nbm;
    }

    /**
     * @param mixed $nbm
     */
    public function setNbm($nbm)
    {
        $this->_nbm = $nbm;
    }

    /**
     * @return \B2W\Skyhub\Contracts\Data\Collection|\B2W\Skyhub\Model\Catalog\Category\Collection|mixed
     * @throws \Exception
     */
    public function getCategories()
    {
        if (is_null($this->_categories)) {
            $repo = \B2W\Skyhub\Model\Catalog\Category\Factory::create();
            $this->_categories = $repo::emptyCollection();
        }

        return $this->_categories;
    }

    /**
     * @param \B2W\Skyhub\Contracts\Catalog\Category\Entity $category
     * @return $this|mixed
     * @throws \Exception
     */
    public function addCategory(\B2W\Skyhub\Contracts\Catalog\Category\Entity $category)
    {
        $this->getCategories()->addItem($category);
        return $this;
    }

    /**
     * @param \B2W\Skyhub\Model\Catalog\Category\Collection $collection
     * @return $this
     */
    public function setCategories(\B2W\Skyhub\Model\Catalog\Category\Collection $collection)
    {
        $this->_categories = $collection;
        return $this;
    }

    /**
     * @return array|mixed
     */
    public function getImages()
    {
        if (is_null($this->_images)) {
            $this->_images = array();
        }

        return $this->_images;
    }

    /**
     * @param $image
     * @return $this|mixed
     */
    public function addImage($image)
    {
        $this->_images[] = $image;
        return $this;
    }

    /**
     * @return Attribute\Collection|mixed
     */
    public function getSpecifications()
    {
        if (is_null($this->_specifications)) {
            $repository = SpecificationFactory::create();
            $this->_specifications = $repository::emptyCollection();
        }

        return $this->_specifications;
    }

    /**
     * @param \B2W\Skyhub\Contracts\Catalog\Product\Specification\Entity $specification
     * @return $this|mixed
     */
    public function addSpecification(\B2W\Skyhub\Contracts\Catalog\Product\Specification\Entity $specification)
    {
        $this->_specifications->addItem($specification);
        return $this;
    }

    /**
     * @return mixed
     * @throws \Exception
     */
    public function getVariations()
    {
        if (is_null($this->_variations)) {
            $repository = ProductFactory::create();
            $this->_variations = $repository::emptyCollection();
        }

        return $this->_variations;
    }

    /**
     * @param \B2W\Skyhub\Contracts\Catalog\Product\Entity $product
     * @return $this|mixed
     * @throws \Exception
     */
    public function addVariation(\B2W\Skyhub\Contracts\Catalog\Product\Entity $product)
    {
        $this->getVariations()->addItem($product);
        return $this;
    }

    /**
     * @param Variation\Collection $variationCollection
     * @return mixed|void
     */
    public function setVariations(\B2W\Skyhub\Model\Catalog\Product\Variation\Collection $variationCollection)
    {
        $this->_variations = $variationCollection;
    }

    /**
     * @return \B2W\Skyhub\Contracts\Data\Collection|Attribute\Collection|Collection|mixed
     * @throws \Exception
     */
    public function getVariationAttributes()
    {
        if (is_null($this->_variationAttributes)) {
            $repository = AttributeFactory::create();
            $this->_variationAttributes = $repository::emptyCollection();
        }

        return $this->_variationAttributes;
    }

    /**
     * @param \B2W\Skyhub\Contracts\Catalog\Product\Attribute\Entity $attribute
     * @return $this|mixed
     * @throws \Exception
     */
    public function addVariationAttribute(\B2W\Skyhub\Contracts\Catalog\Product\Attribute\Entity $attribute)
    {
        $this->getVariationAttributes()->addItem($attribute);
        return $this;
    }
}
