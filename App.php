<?php
/**
 * BSeller - B2W Companhia Digital
 *
 * DISCLAIMER
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @copyright     Copyright (c) 2017 B2W Companhia Digital. (http://www.bseller.com.br/)
 * @author        Luiz Tucillo <luiz.tucillo@e-smart.com.br>
 */

class App
{
    /**
     * @return App|bool
     * @throws Exception
     */
    public static function instantiate()
    {
        static $instance = false;
        if ($instance === false) {
            $instance = new static();
        }

        $instance->__construct();

        return $instance;
    }

    /**
     * App constructor.
     * @throws Exception
     */
    private function __construct()
    {
        spl_autoload_register(function($className) {

            if (class_exists($className)) {
                return $this;
            }

            $file   = str_replace('\\', DIRECTORY_SEPARATOR, $className) . '.php';
            $path   = __DIR__ . DIRECTORY_SEPARATOR . $file;

            if (file_exists($path)) {
                require_once($path);
            }
        });

        $this->_init();

        return $this;
    }


    /**
     * @return $this
     */
    private function __clone()
    {
        return $this;
    }


    /**
     * @return $this
     */
    public function admin()
    {
        $admin = new \B2W\Skyhub\View\Admin\Admin();
        $admin->init();

        return $this;
    }

    /**
     * @param $entity
     * @param string $type
     * @return \B2W\Skyhub\Contracts\Data\Repository
     * @throws \B2W\Skyhub\Exception\Data\RepositoryNotFound
     */
    public static function repository($entity, $type = 'db')
    {
        $type       = ucfirst($type);
        $name       = implode(
            '\\',
            array_map(
                function($item) {
                    return ucfirst($item);
                },
                explode('/', $entity)
            )
        );
        $className  = '\B2W\Skyhub\Model\\' . $name . '\Repository';
        $repo       = $className . '\\' . $type;

        if (!class_exists($repo)) {
            throw new \B2W\Skyhub\Exception\Data\RepositoryNotFound();
        }

        return $repo::instantiate();
    }


    /**
     * @param $path
     * @return array
     */
    public static function getConfig($path)
    {
        $path   = str_replace('/', DS, $path);
        $file   = __DIR__ . DS . 'config' . DS . $path . '.php';

        if (file_exists($file)) {
            return require($file);
        }

        return array();
    }

    public static function getBaseDir()
    {
        return __DIR__;
    }











    /**
     *
     */
    protected function _init()
    {
//        $this->_testAttributes();
//        $this->_testCategories();
//        $this->_testCategory();
//        $this->_testProducts();
//        $this->_testSingleProduct();
//        $this->_sendProduct();
    }

    /**
     * @throws \B2W\Skyhub\Exception\Data\RepositoryNotFound
     */
    protected function _sendProduct()
    {
        /** @var \B2W\Skyhub\Model\Catalog\Product\Entity $product */
        $product    = self::repository('catalog/product')->one(31);
        $integrator = new \B2W\Skyhub\Model\Integrator\Catalog\Product();
        $integrator->one($product);
    }

    /**
     *
     */
    protected function _testSingleProduct()
    {
        $product = self::repository('catalog/product')->one(17);

        $product->getVariations();
        $product->getCategories();
        $product->getVariationAttributes();
        $product->getSpecifications();

        echo '<pre>';
        foreach ($product->getImages() as $image) {
            echo '<img src="'.$image.'" />';
        }

        echo '</pre>';
    }

    /**
     *
     */
    protected function _testProducts()
    {
        $products = self::repository('catalog/product')->all();

        echo '<Pre>';

        foreach ($products as $product) {
            print_r($product);
        }

        echo '</Pre>';

        echo '<br /><br />';
    }

    /**
     *
     */
    protected function _testCategory()
    {
        $category = self::repository('catalog/category')->one(21);

        echo '<pre>';
        print_r($category);
        echo '</pre>';
    }

    /**
     *
     */
    protected function _testCategories()
    {
        $categories = self::repository('catalog/category')->all();

        foreach ($categories as $category) {
            echo $category->getName() . "<br />";

            if ($category->getParent()) {
                echo $category->getParent()->getName() . '<br />';
            }

            echo '<br />';
        }

        echo '<br /><br />';
    }


    /**
     *
     */
    protected function _testAttributes()
    {
        $attrs = self::repository('catalog/product/attribute')->all();

        echo '<pre>';
        foreach ($attrs as $attr) {
            echo $attr->getLabel() . "<br />";
            foreach ($attr->getOptions() as $option) {
                echo $option->getCode() . "<br />";
            }
            echo '<br /><br />';
        }

        echo '</pre>';
    }
}
